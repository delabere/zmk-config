/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define U_TAPPING_TERM 200

&mt {
    compatible = "zmk,behavior-hold-tap";
    label = "u_mt";
    #binding-cells = <2>;
    tapping_term_ms = <U_TAPPING_TERM>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
};

&lt {
    compatible = "zmk,behavior-hold-tap";
    label = "u_lt";
    #binding-cells = <2>;
    tapping_term_ms = <U_TAPPING_TERM>;
    flavor = "tap-preferred";
    bindings = <&mo>, <&kp>;
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE>; };

&mmv {
    time-to-max-speed-ms = <1500>;
    delay-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <16 19>;
            layers = <0>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&none  &kp Q        &kp W           &kp E           &kp R             &kp T        &kp Y      &kp U             &kp I           &kp O           &lt 5 P                        &trans
&none  &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G        &kp H      &mt LEFT_SHIFT J  &mt LEFT_GUI K  &mt LEFT_ALT L  &mt LEFT_CONTROL SINGLE_QUOTE  &none
&none  &mt LSHFT Z  &kp X           &kp C           &kp V             &kp B        &kp N      &kp M             &kp COMMA       &kp DOT         &mt RSHFT SLASH                &none
                                    &lt 3 ESC       &sk LEFT_SHIFT    &lt 6 TAB    &lt 2 RET  &lt 1 SPACE       &lt 4 BSPC
            >;
        };

        NUM {
            bindings = <
&none  &kp LBKT   &kp N1  &kp N2  &kp N3  &kp RBKT     &kp CARET  &kp AMPS   &kp ASTRK     &kp MINUS  &kp PLUS   &none
&none  &kp COLON  &kp N4  &kp N5  &kp N6  &kp EQUAL    &none      &kp LSHFT  &kp LEFT_GUI  &kp LALT   &kp LCTRL  &none
&none  &kp GRAVE  &kp N7  &kp N8  &kp N9  &kp BSLH     &trans     &kp BSLH   &trans        &trans     &trans     &none
                          &none   &kp N0  &kp MINUS    &none      &none      &none
            >;
        };

        SYM {
            bindings = <
&none  &kp EXCL   &kp AT             &kp HASH          &kp DLLR          &kp PRCNT        &kp EQUAL     &kp LPAR  &kp RPAR  &kp COLON          &kp PLUS        &none
&none  &kp GRAVE  &kp LESS_THAN      &kp LA(NUMBER_3)  &kp GREATER_THAN  &kp CARET        &kp ASTERISK  &kp LBRC  &kp RBRC  &kp SEMICOLON      &kp MINUS       &none
&none  &kp TILDE  &kp LA(LS(POUND))  &kp BACKSLASH     &kp PIPE          &kp AMPERSAND    &kp GRAVE     &kp LBKT  &kp RBKT  &kp DOUBLE_QUOTES  &kp UNDERSCORE  &none
                                     &none             &none             &none            &none         &none     &none
            >;
        };

        MEDIA {
            bindings = <
&none  &trans     &trans    &trans    &trans     &trans    &trans        &trans            &trans        &trans        &trans      &none
&none  &kp RCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &kp C_PREV    &kp C_VOL_DN      &kp C_VOL_UP  &kp C_NEXT    &none       &none
&none  &trans     &trans    &trans    &trans     &trans    &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &none
                            &trans    &trans     &trans    &kp C_STOP    &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        FUN {
            bindings = <
&none  &trans   &trans   &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &none
&none  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &none
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        BUTTON {
            bindings = <
&none  &none  &kp LG(F10)  &none       &none   &kp LG(F6)    &none   &none   &none   &none  &none  &none
&none  &none  &kp LG(F1)   &none       &none   &none         &none   &none   &none   &none  &none  &none
&none  &none  &none        &kp LG(F2)  &none   &kp LG(F3)    &none   &none   &none   &none  &none  &none
                           &trans      &trans  &trans        &trans  &trans  &trans
            >;
        };

        NAV {
            bindings = <
&none  &trans     &trans     &trans     &trans     &trans                &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT  &none  &none
&none  &kp LCTRL  &kp LALT   &kp LGUI   &kp LSHFT  &kp LG(LS(N5))        &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT        &none  &none
&none  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(LC(LS(N4)))    &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_DOWN  &msc SCRL_RIGHT  &none  &none
                             &none      &none      &none                 &kp ENTER       &mkp LCLK       &kp BACKSPACE
            >;
        };
    };
};
